{"version":3,"sources":["constants.js","components/Login.js","api/index.js","components/Profile.js","components/SearchBar.js","components/Posts.js","components/MakePost.js","components/SinglePost.js","index.js"],"names":["BASE_URL","userName","passWord","setToken","history","a","fetch","method","headers","body","JSON","stringify","user","username","password","response","json","result","console","log","token","data","localStorage","setItem","push","confirmPassword","alert","Login","match","useState","setUsername","setPassword","setConfirmPassword","onSubmit","event","preventDefault","url","login","register","className","type","value","onChange","target","id","placeholder","to","isLoggedIn","getUser","setUser","error","fetchPosts","setPosts","makeHeaders","dataposts","posts","newPost","newTitle","newDescrip","newPrice","newLocation","newTransport","post","title","description","price","location","willDeliver","deletePost","postID","messageUser","message","content","getPostWithID","singlePost","find","_id","Profile","setMessage","useEffect","userdata","messages","map","index","fromUser","SearchBar","search","postsDisplay","setPostsDisplay","filteredPosts","filter","text","toLowerCase","includes","author","postMatches","postsToDisplay","length","Posts","useHistory","idx","isAuthor","onClick","success","backToProfile","MakePost","setNewTitle","setNewDescrip","setNewPrice","setNewLocation","setNewTransport","htmlFor","SinglePost","onePost","setOnePost","useParams","autoFocus","required","App","getItem","loggedIn","setLoggedIn","removeItem","logout","path","render","routeProps","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.92720955.chunk.js","sourcesContent":["export const BASE_URL = \"https://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT\";\n\n","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { BASE_URL } from '../constants';\n\nasync function login(userName, passWord, setToken, history) {\n    //pass these to API, and get back a token\n    //save token in user's browser\n    //update state \n    const response = await fetch(BASE_URL + '/users/login', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n        user: {\n            username: userName,\n            password: passWord\n              }\n            })\n        })\n          \n            const result = await response.json();\n            console.log(result);\n            const token = result.data.token;\n            // const loggedinuser = result.data.username;\n            setToken(token);\n            localStorage.setItem(\"token\", token);\n            history.push(\"/\");\n    }\n\nasync function register(setToken, userName, passWord, confirmPassword) {\nif (passWord !== confirmPassword) {\n    alert(\"Passwords don't match\");\n    return;\n    }\n        const response = await fetch(BASE_URL + '/users/register', {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            user: {\n            username: userName,\n            password: passWord\n            }\n        })\n        })  \n        const result = await response.json();\n        console.log(result);\n        const token = result.data.token;\n        setToken(token);\n        localStorage.setItem(\"token\", token);\n        \n}\n\n//match here is a variable of routeProps, and setToken is a prop that we added//\nconst Login = ({ setToken, match, history }) => {\n    \n    const [userName, setUsername] = useState(\"your username\");\n    const [passWord, setPassword] = useState(\"your password\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    return (\n        <form\n        onSubmit={(event) => {\n            event.preventDefault();\n            if (match.url === \"/login\") login(userName, passWord, setToken, history);\n            if (match.url === \"/register\") register(setToken, userName, passWord, confirmPassword)\n            \n        }}\n        >\n            {/*USERNAME*/}\n        <div className=\"container\">\n            <label className=\"form-label\">\n                Username\n            </label>\n            <input\n                type=\"text\"\n                value={userName}\n                onChange={({target: {value}}) => setUsername(value)}\n                className=\"form-control\"\n                id=\"usernameInput\"\n                placeholder=\"your username here\"\n                />\n        </div>\n            {/*PASSWORD*/}\n        <div className=\"container\">\n            <label className=\"form-label\">\n                Password\n            </label>\n            <input\n                type=\"password\"\n                value={passWord}\n                onChange={({target: {value}}) => setPassword(value)}\n                className=\"form-control\"\n                id=\"passwordInput\"\n                placeholder=\"your password here\"\n            />\n        </div>\n            {/*CONFIRM PASSWORD*/}\n            {/* To Do: ONLY RENDER IF /register */}\n        {match.url === \"/register\" ?    \n        (<div className=\"container\">\n            <label className=\"form-label\">\n                Confirm Password\n            </label>\n            <input\n                type=\"password\" \n                onChange={({target: {value}}) => setConfirmPassword(value)}\n                value={confirmPassword}\n                className=\"form-control\"\n                id=\"setConfirmPasswordInput\"\n                placeholder=\"\"\n            />\n        </div>) : null}\n\n            {/*SUBMIT BUTTON*/}\n        <div className=\"submit\">\n            <button type=\"submit\" className=\"submit-button\">\n                Submit\n            </button>\n            {/* Link to login and register*/}\n            {\n                match.url === \"/register\" ?\n                <Link to=\"/login\"> Already have an account? </Link>\n                : <Link to=\"/register\"> Don't have an account?</Link>\n\n            }\n        </div>\n\n        </form>\n    )\n}\n\n\n\n\nexport default Login;\n","\nimport { BASE_URL } from '../constants';\n\n\n\nexport function isLoggedIn(token) {\n  if (token) {\n    return true\n  } else {\n    return false\n  }\n};\n\n//GET USER//\n\n//to getUser's info, fetch the API info about user using this token as auth, then parse the data and let the results be equal to data. then, set the state of user to data.data.username\nexport async function getUser(token, setUser){\n  try { \n    const result = await fetch(BASE_URL + '/users/me', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n    })\n    const data = await result.json();\n    console.log(data);\n    // console.log(data.data.username)\n    setUser[data.data.username];\n    return data;\n\n} catch(error) {\n  console.error(error);\n  }\n}\n\n\n\n\n//FETCH POSTS//\nexport async function fetchPosts(token, setPosts) {\n  try{\n      const response = await fetch('https://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT/posts', {\n          headers: makeHeaders(token)\n      }) \n  const data = await response.json();\n  const dataposts = data.data.posts;\n  setPosts(dataposts);\n  console.log('data: ', data.data.posts);\n}catch (error){\n  console.error(error)\n}\n}\n\n//MAKE NEW POST//\nexport async function newPost(token, newTitle, newDescrip, newPrice, newLocation, newTransport) {\n  try{\n      const response = await fetch(BASE_URL + '/posts', {\n          method: \"POST\",\n          headers:  {\n                      'Content-Type': 'application/json',\n                      'Authorization': 'Bearer ' + token\n                    },\n          body: JSON.stringify({\n            post: {\n              title: newTitle,\n              description: newDescrip,\n              price: newPrice,\n              location: newLocation,\n              willDeliver: newTransport\n            }\n          })\n      })\n      const data = await response.json();\n      return data;\n      } catch (error) {\n    console.error(error)\n    }\n}\n\n\n  \n\n\n//DELETE POST//\n\nexport async function deletePost(token, postID){\n  try {\n    const result = await fetch(`${BASE_URL}/posts/${postID}`, {\n        method: \"DELETE\",\n        headers: makeHeaders(token)\n    })\n      const data = await result.json()\n      return data;\n  }\n    catch (error) {\n      console.error(error)\n    }\n}\n\n//MESSAGE USER//\n\nexport async function messageUser(token, postID){\n  try {\n      const result = await fetch(`${BASE_URL}/posts/${postID}/messages`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n      },\n    body: JSON.stringify({\n      message: {\n        content: 'content'\n      },\n    })\n  })\n    const data = await result.json()\n    return data;\n  }\n  catch (error) {\n    console.error(error)\n  }\n}\n\n\n//GET A POST WITH ID//\n\nexport async function getPostWithID(token, postID){\n  try{\n      const response = await fetch(`${BASE_URL}/posts`, {\n          method: \"GET\",\n          headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n          }\n      })\n      const result = await response.json();\n      const posts = result.data.posts;\n          const singlePost = posts.find((post) => {\n            if (post._id === postID) {\n            console.log(post);\n            return post;\n        }\n    })\n    console.log(singlePost)    \n    return singlePost;  \n  }catch (error){\n      console.error(\"Isssue Fetching Users Posts\", error)\n  }\n}\n\n\n \n\n\n\n//LOGOUT//\nexport function logout(setToken) {\n  localStorage.removeItem(\"token\")\n  setToken(null);\n}\n\n//MAKEHEADERS//\nexport function makeHeaders(token) {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n  if (token) {\n    headers['Authorization'] = 'Bearer ' + token\n  }\n  return headers;\n}\n","import React, {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUser } from '../api';\n\n\n\n//when given a token, render getUser as a \"side effect\" of the profile component. if the token is there, return a greeting (etc), otherwise, tell the user to login into their account\n//extract the token into the profile and set the state of user inside of the profile\nconst Profile = ({token}) => {\n    const [user, setUser] = useState([]);\n    const [message, setMessage] = useState([])\n\n    // const [messages, setMessages] = useState('');\n    // const [userMessages, setUserMessages] = useState('');\n    \n   \n\n    useEffect(async () => {\n        if(token) {\n       const userdata = await getUser(token, setUser);\n       console.log('userdata.data', userdata.data)\n       setUser(userdata.data)\n       setMessage(userdata.data.messages)\n    }\n       \n    }, [token])\n\n  \n\n  if(token) {\n        return (\n            <>\n        \n            <div className=\"centered\">\n                <h1> Welcome back, {user.username}!</h1>\n                <h3>Inbox:</h3>\n                \n\n                {\n                    message.map((message, index) => {\n                        if (user.username !== message.fromUser.username) {\n                        return (\n                                <div key={index}>\n                                    <ul >\n                                        <ul><h4>Post: {message.post.title}</h4></ul>\n                                        <ul>Sender: {message.fromUser.username}</ul>\n                                        <ul>Message: {message.content}</ul>\n                                    </ul>\n                                </div> \n                                )}\n                                \n                              }\n                            )\n                }        \n            </div>\n\n            <div>\n                <h3>Sent Messages: </h3>\n                {\n                    message.map((message, index) => {\n                        if (user.username === message.fromUser.username) {\n                        return (\n                                <div key={index}>\n                                    <ul >\n                                        <ul><h4>Post: {message.post.title}</h4></ul>\n                                        <ul>Sender: Me </ul>\n                                        <ul>Message: {message.content}</ul>\n                                    </ul>\n                                </div> \n                                )}\n                                \n                              }\n                            )\n                }        \n            </div>\n            \n            </>\n            )} else {\n                return(\n                    <h3>Please <Link to='/login'>login </Link>to view your profile</h3>\n                )\n            }\n            }\n        \n\nexport default Profile;","import React, {useState, useEffect} from 'react';\nimport { fetchPosts } from '../api';\n\nfunction postMatches(post, text) {\n    post.title.toLowerCase().includes(text)\n    post.description.toLowerCase().includes(text)\n    post.author.username.toLowerCase().includes(text)\n    post.price.toLowerCase().includes(text)\n    post.location.toLowerCase().includes(text)\n}\n\n//cannot get this component to work!!!!!//\n\nconst SearchBar = ({token, setPosts}) => {\n    const [search, setSearch] = useState('');\n    const [postsDisplay, setPostsDisplay] = useState([]);\n\n    useEffect(() => {\n        fetchPosts(token, setPosts)\n    }, [token, setPosts])\n\n\n    return (\n        <>\n        <form>\n            <div>\n                <input\n                type='text'\n                value={search}\n                onChange={({target : {value}}) => {\n                    const filteredPosts = posts.filter((post) => \n                        postMatches(post, value.toLowerCase()));\n                    const postsToDisplay = value.length ? filteredPosts : posts;\n                    setPostsDisplay(postsToDisplay) \n                }}\n                />\n            </div>\n        </form>\n        \n        {postsDisplay.map((post, index) => {\n            return (\n                <div key={index}>\n                    <div className=\"displayPostTitle\">\n                        {post.title}\n                    </div>\n                </div>\n            )\n        })\n        }\n        </>\n    )\n}\n\nexport default SearchBar;","import React, { useState, useEffect } from 'react';\nimport { makeHeaders, fetchPosts, getPostWithID, deletePost, messageUser } from '../api';\nimport { useHistory } from 'react-router-dom';\nimport SearchBar from './SearchBar';\n\n\nconst Posts = ({token, postsDisplay, setPostsDisplay}) => {\n    const [posts, setPosts] = useState([]);\n    const history = useHistory();\n\n   \n\n    function backtoProfile() {\n        history.push(\"/profile\");\n      };\n\n    console.log('posts: ', posts);\n    \n\n\nuseEffect(() => {\n    fetchPosts(token, setPosts)\n}, [token]);\n\n\n\n\n    \n        return (\n            <div>\n                    <div>\n                        <span className=\"searchbar\">Search Listings: <SearchBar postsDisplay={postsDisplay} setPostsDisplay={setPostsDisplay} /></span>\n                        \n                        <h2>Current Listings</h2>\n                    </div>\n                            <ul className=\"otherPosts\">\n                                        {\n                                            posts.map((post, idx) => \n                                            <div key={idx}>\n                                                <h3>{post.title}</h3>\n                                                <p>Description: {post.description}</p>\n                                                <li>Price: {post.price}</li>\n                                                <li>Seller: {post.author.username}</li> \n                                        { token? \n                                                <ul>\n                                                    { post.isAuthor ? \n                                                    <button\n                                                        onClick={async () => {\n                                                            const postID = post._id;\n                                                            const result = await deletePost(token, post._id);\n                                                            alert(`Delete ${result.success? 'successful!' : 'unsuccessful - try again!'}`);\n                                                            backToProfile();\n                                                                }}\n                                                        className=\"deleteButton\">\n                                                            Delete\n                                                    </button>\n                                                        :   \n                                                    \n                                                    <button\n                                                        onClick={async () => {\n                                                            history.push(`/singlepost/${post._id}`);\n                                                        }}\n                                                        className=\"toSinglePost\">\n                                                        Send Message\n                                                    </button>\n                                        } \n                                    </ul> : null }\n                                </div>\n                                            )} \n                            </ul>\n                     </div>\n                  \n   )\n}\n\n\n\n\nexport default Posts;\n\n\n\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from 'react-router-dom';\nimport BASE_URL from '../constants';\nimport { newPost } from '../api';\n\n\nconst MakePost = ({token, setPosts, posts}) => {\n    const [newTitle, setNewTitle] = useState('');\n    const [newDescrip, setNewDescrip] = useState('');\n    const [newPrice, setNewPrice] = useState('');\n    const [newLocation, setNewLocation] = useState('');\n    const [newTransport, setNewTransport] = useState(false);\n    const history = useHistory();\n    function toListings() {\n        history.push('/posts');\n    }\n\n    if(token) {\n    return(\n        <article className='newPostArticle'>\n            <h3>Create New Listing</h3>\n            <form onSubmit={async (event) => {\n                event.preventDefault();\n                try {\n                    const result = await newPost(token, newTitle, newDescrip, newPrice, newLocation, newTransport);\n                    setPosts([...posts, result])\n                    alert(`Post ${result.success? 'successful!' : 'unsuccessful - try again!'}`);\n                    toListings();\n                    \n                }\n                catch (error) {\n                    console.log(error)\n                } \n            }}>\n                <label htmlFor=\"postTitle\">Post Title:</label>\n                <input\n                    type='text'\n                    value={newTitle}\n                    onChange={({target: {value}}) => setNewTitle(value)}\n                    className=\"form-control\"\n                    id='postTitle'\n                    placeholder='title'\n                />\n                    <label htmlFor=\"postDescrip\">Description:</label>\n                    <input\n                    type='text'\n                    value={newDescrip}\n                    onChange={({target: {value}}) => setNewDescrip(value)}\n                    className=\"form-control\"\n                    id='postDescrip'\n                    placeholder='description'\n                    />\n                        <label htmlFor=\"postPrice\">Price:</label>\n                        <input\n                        type='text'\n                        value={newPrice}\n                        onChange={({target: {value}}) => setNewPrice(value)}\n                        className=\"form-control\"\n                        id='postPrice'\n                        placeholder='price'\n                        />\n                            <label htmlFor=\"postLocation\">Location:</label>\n                            <input\n                            type='text'\n                            value={newLocation}\n                            onChange={({target: {value}}) => setNewLocation(value)}\n                            className=\"form-control\"\n                            id='postLocation'\n                            placeholder='location'\n                            />\n                                <div>\n                                <label htmlFor=\"postDeliver\">Willing to Deliver?</label>\n                                <input\n                                type='checkbox'\n                                value={newTransport}\n                                onChange={({target: {value}}) => setNewTransport(!newTransport)}\n                                id='postDeiver'\n                                />\n                                </div>\n                                <button className=\"submitNewPost\">Submit</button>\n            </form>\n        </article>\n    ) }\n    else {\n        return(\n            <h3>Please <Link to='/login'>login </Link>to create a new listing.</h3>\n        )\n    }\n}\n\nexport default MakePost;","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { messageUser, getPostWithID } from '../api';\n\n\n\nconst SinglePost = ({token, match, onePost, setOnePost}) => {\n    const {postID} = useParams();\n    const [message, setMessage] = useState('');\n//   const [message, setMessage] = useState('');\n\n  \n\n    useEffect(async() => {\n    \n    console.log(postID)\n    const post = await getPostWithID(token, postID);\n    console.log('this is the post:', post)\n      setOnePost(post);\n      \n    }, [])\n\n    \n \n   return (\n        <>\n   \n        <div>\n            <h3>{onePost.title}</h3>\n            {/* <h4>{onePost.author.username}</h4> */}\n            <h5>{onePost.description}</h5>\n            <h4>{onePost.price}</h4>\n            \n        </div>\n                    {token ?\n                    <form\n                        onSubmit={async (event) => {\n                            event.preventDefault();\n                            const result = await messageUser(token, postID, message);\n                            alert(`Message ${result.success ? 'sent' : 'not sent'}`);\n                            setMessage('');\n                        }}>\n                        <textarea\n                            type=\"text\"\n                            placeholder='your message here'\n                            autoFocus\n                            required\n                            id=\"message\"\n                            value={message}\n                            onChange={({ target: { value } }) => setMessage(value)\n                            } />\n                        <p><button\n                            className=\"sendMessage\">\n                            Send Message\n                        </button></p>\n                    </form>\n                    : <h3>Please login or create an account to message seller.</h3> }\n\n   </> )\n}\n\n\n\nexport default SinglePost; ","\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Link, useHistory } from 'react-router-dom';\n\nimport { Login, Profile, Posts, MakePost, SinglePost, SearchBar } from './components';\nimport { getUser, logout, isLoggedIn } from './api';\n\n\n\nconst App = () => {\n    const [token, setToken] = useState(localStorage.getItem('token')); //we need to put token state here because it will be used throughout the entire app//\n    const [user, setUser] = useState(\"\");\n    const [posts, setPosts] = useState([]);\n    const [onePost, setOnePost] = useState({});\n    const [loggedIn, setLoggedIn] = useState(isLoggedIn(token));\n\n\n    useEffect(() => {\n        setLoggedIn(isLoggedIn(token));\n    }, [token])\n    \n    \n    \n\n    //*** checks to see if there is token in local storage ***//\n    useEffect(() => {\n        console.log(\"Mounted\")\n        //now we need to get the token from local storage and use it to log in\n        if (token) {\n            setPosts(posts);\n        }    \n    }, [token])\n\n   \n\n\n\nreturn ( \n<BrowserRouter>\n    <div id=\"container\">\n        <div id=\"title\">\n        <Link to=\"/profile\">STRANGERS' THINGS</Link>\n        </div>\n\n    \n\n        <div id=\"navbar\">\n            <Link to=\"/login\"> Login </Link>\n            <Link to=\"/register\"> Register </Link>\n            <span \n            id=\"logoutbutton\"\n            onClick={() => {\n                alert('See you next time!')\n                logout(setToken);\n\n            }} > Logout </span>\n                <p>\n                    <Link to=\"/profile\"> Profile </Link>\n                    <Link to=\"/posts\"> Listings   </Link>\n                    <Link to=\"/makepost\"> Create New </Link>\n                </p>\n\n                \n\n\n      \n\n\n\n                    \n        </div>  \n            <Route path=\"/posts\" render={(routeProps) => <Posts {...routeProps} loggedIn={loggedIn} token={token} setToken={setToken} setPosts={setPosts} posts={posts} />}/>\n            <Route path=\"/makepost\" render={(routeProps) => <MakePost {...routeProps} token={token} setToken={setToken} setPosts={setPosts} posts={posts} />}/>\n            <Route path=\"/login\" render={(routeProps) => <Login {...routeProps} setToken={setToken} setUser={setUser} />}/> \n            <Route path=\"/register\" render={(routeProps) => <Login {...routeProps} setToken={setToken} setUser={setUser} />} />\n            <Route path=\"/profile\" render={(routeProps) => <Profile {...routeProps} token={token} setUser={setUser} user={user} />} />\n            <Route path=\"/singlepost/:postID\" render={(routeProps) => <SinglePost {...routeProps} token={token} setToken={setToken} onePost={onePost} setOnePost={setOnePost} />} />\n            <Route exact path=\"/\" render={(routeProps) => token ? <Profile {...routeProps} token={token} setToken={setToken} user={user} /> : <Login {...routeProps} setToken={setToken} />} />\n        \n\n    </div>\n</BrowserRouter>\n)\n   \n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('app')\n);\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}